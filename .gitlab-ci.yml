stages:
  - "build"
  - "quality"
  - "security"

image: "node:12"

cache:
  key: "$CI_BUILD_REF_NAME"
  untracked: true
  paths:
    - "node_modules/"

build:npm:
  stage: "build"
  before_script:
    - "npm install"
  script:
    - "npm run build"

build:docker:
  stage: "build"
  image: "docker:stable"
  variables:
    DOCKER_DRIVER: "overlay2"
    DOCKER_IMAGE_TAG_CI: "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_NAME}"
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - "docker:dind"
  before_script:
    - "echo ${CI_JOB_TOKEN} | docker login --username ${CI_REGISTRY_USER} --password-stdin ${CI_REGISTRY}"
  script:
    - docker build
      --build-arg GIT_COMMIT=${CI_COMMIT_SHA}
      --build-arg VERSION=${CI_COMMIT_SHORT_SHA}
      --tag ${DOCKER_IMAGE_TAG_CI} .
    - "docker push ${DOCKER_IMAGE_TAG_CI}"

quality:lint:
  stage: "quality"
  before_script:
    - "npm install"
  script:
    - "npm run lint"
  allow_failure: true

quality:test:
  stage: "quality"
  before_script:
    - "npm install"
  script:
    - "npm run test"

dependency_scanning:
  stage: "security"
  image: "docker:stable"
  variables:
    DOCKER_DRIVER: "overlay2"
    DOCKER_TLS_CERTDIR: "/certs"
  services:
    - "docker:dind"
  script:
    - export SP_VERSION=$(echo $CI_SERVER_VERSION | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
    - docker run
      --env DEP_SCAN_DISABLE_REMOTE_CHECKS=${DEP_SCAN_DISABLE_REMOTE_CHECKS:-false}
      --volume $PWD:/code
      --volume /var/run/docker.sock:/var/run/docker.sock
      registry.gitlab.com/gitlab-org/security-products/dependency-scanning:$SP_VERSION /code
  allow_failure: true
  artifacts:
    reports:
      dependency_scanning: "gl-dependency-scanning-report.json"
